name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
on:
  push:
    branches: 
      - dev
      - future
      - update/ps-to-yml
    tags:
      - v[0-9]+.[0-9]+.[0-9]+ # Matches all semantic versioning tags with major, minor, patch
  pull_request:
    branches: 
      - dev
      - future
      
env:
  MORYX_OPTIMIZE_CODE: "false"
  MORYX_BUILD_CONFIG: "Release"
  MORYX_BUILDNUMBER: ${{github.run_number}}
  dotnet_sdk_version: '7.x'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  REPOSITORY_NAME: ${{ github.event.repository.name }}

jobs:
  #Build:
  #  uses: PHOENIXCONTACT/tools/.github/workflows/build-tool.yml@main
  #  with:
  #    MORYX_OPTIMIZE_CODE: "false"
  #    MORYX_BUILD_CONFIG: "Release"
  #    MORYX_BUILDNUMBER: ${{github.run_number}}
  #    dotnet_sdk_version: '7.x'
  #    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  #    REPOSITORY_NAME: ${{ github.event.repository.name }}
  
  Build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup .NET SDK standard (7)
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.x

      - name: Setup .NET SDK 6 for testing purposes
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x

      - name: Setup Node version
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Clean
        run: dotnet clean && dotnet nuget locals all --clear

      - name: Execute dotnet restore
        run: dotnet restore

      - name: Execute dotnet build
        run: dotnet build

  #UnitTests:
  #  needs: [Build]
  #  uses: PHOENIXCONTACT/tools/.github/workflows/unittest-tool.yml@main
  #  with:
  #    MORYX_OPTIMIZE_CODE: "false"
  #    MORYX_BUILD_CONFIG: "Release"
  #    MORYX_BUILDNUMBER: ${{github.run_number}}
  #    dotnet_sdk_version: '7.x'
  #    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  #    REPOSITORY_NAME: ${{ github.event.repository.name }}
  
  UnitTests:
    needs: [Build]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Download artifacts
        uses: actions/download-artifact@v2
      
      - name: Setup Node version
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Execute dotnet test (needs coverlet.collector nuget)
        run: dotnet test --filter FullyQualifiedName!~Integration --collect:"XPlat Code Coverage"

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-test-results
          path: src\Tests\**\TestResults\**\coverage.cobertura.xml
          retention-days: 1

  #IntegrationTests:
  #  needs: [Build]
  #  uses: PHOENIXCONTACT/tools/.github/workflows/integrationtest-tool.yml@main
  #  with:
  #    MORYX_OPTIMIZE_CODE: "false"
  #    MORYX_BUILD_CONFIG: "Release"
  #    MORYX_BUILDNUMBER: ${{github.run_number}}
  #    dotnet_sdk_version: '7.x'
  #    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  #    REPOSITORY_NAME: ${{ github.event.repository.name }}
  
  
  IntegrationTests:
    needs: [Build]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET SDK standard (7)
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.x

      - name: Setup .NET SDK 6 for testing purposes
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x

      - name: Setup Node version
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Clean
        run: dotnet clean && dotnet nuget locals all --clear

      - name: Execute dotnet restore
        run: dotnet restore

      - name: Execute dotnet build
        run: dotnet build

      - name: Execute dotnet test (needs coverlet.collector nuget)
        run: dotnet test --filter FullyQualifiedName~Integration --collect:"XPlat Code Coverage"

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-test-results
          path: src\Tests\**\TestResults\**\coverage.cobertura.xml
          retention-days: 1

  ReportGenerator:
    needs: [UnitTests, IntegrationTests]
    uses: PHOENIXCONTACT/tools/.github/workflows/reportgenerator-tool.yml@main
    with:
      MORYX_OPTIMIZE_CODE: "false"
      MORYX_BUILD_CONFIG: "Release"
      MORYX_BUILDNUMBER: ${{github.run_number}}
      dotnet_sdk_version: '7.x'
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      REPOSITORY_NAME: ${{ github.event.repository.name }}
  
               
  #Publish-Test-Coverage:
  #  needs: [ReportGenerator]
  #  uses: PHOENIXCONTACT/tools/.github/workflows/publish-test-coverage-tool.yml@main
  #  with:
  #    MORYX_OPTIMIZE_CODE: "false"
  #    MORYX_BUILD_CONFIG: "Release"
  #    MORYX_BUILDNUMBER: ${{github.run_number}}
  #    dotnet_sdk_version: '7.x'
  #    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  #    REPOSITORY_NAME: ${{ github.event.repository.name }}
  #  secrets:
  #    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  Documentation:
    needs: [UnitTests]
    uses: PHOENIXCONTACT/tools/.github/workflows/documentation-tool.yml@main
    with:
      MORYX_OPTIMIZE_CODE: "false"
      MORYX_BUILD_CONFIG: "Release"
      MORYX_BUILDNUMBER: ${{github.run_number}}
      dotnet_sdk_version: '7.x'
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      REPOSITORY_NAME: ${{ github.event.repository.name }}

  #Publish:
  #  needs: [UnitTests]
  #  uses: PHOENIXCONTACT/tools/.github/workflows/publish-tool.yml@main
  #  with:
  #    MORYX_OPTIMIZE_CODE: "false"
  #    MORYX_BUILD_CONFIG: "Release"
  #    MORYX_BUILDNUMBER: ${{github.run_number}}
  #    dotnet_sdk_version: '7.x'
  #    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  #    REPOSITORY_NAME: ${{ github.event.repository.name }}
  #  secrets: 
  #    MYGET_TOKEN: ${{secrets.MYGET_TOKEN}}
  #    NUGET_TOKEN: ${{secrets.NUGET_TOKEN}}
